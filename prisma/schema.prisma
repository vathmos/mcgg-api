// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum TraitType {
  FACTION
  ROLE
}

enum CommanderType {
  COMBAT
  SURVIVAL
  RESOURCE
  STRATEGY
}

enum commanderSkillType {
  ACTIVE
  PASSIVE
}

enum ItemType {
  PHYSICAL
  MAGIC
  DEFENSE
  MAGIC_CRYSTAL
  SPECIAL_EQUIPMENT
}

model HeroAttribute {
  id             Int      @id @default(autoincrement())
  heroId         Int
  level          Int
  healthPoints   Int
  physicalAttack Int
  magicAttack    Int
  attackSpeed    Float
  attackRange    Int
  initialManaCap Int
  manaCap        Int
  hero           Hero     @relation("HeroAttributes", fields: [heroId], references: [id])
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model SkillScaling {
  id        Int       @id @default(autoincrement())
  type      String
  values    Float
  skill     HeroSkill @relation(fields: [skillId], references: [id])
  skillId   Int
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Season {
  id        Int       @id @default(autoincrement())
  version   String
  title     String
  heroes    Hero[]    @relation("HeroSeasons")
  synergies Synergy[] @relation("SeasonSynergies")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Synergy {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  trait     TraitType
  imageUrl  String?
  heroes    Hero[]    @relation("HeroSynergies")
  seasons   Season[]  @relation("SeasonSynergies")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Hero {
  id               Int             @id @default(autoincrement())
  skillId          Int             @unique
  name             String          @unique
  cost             Int
  portraitImageUrl String?
  iconImageUrl     String?
  attributes       HeroAttribute[] @relation("HeroAttributes")
  synergies        Synergy[]       @relation("HeroSynergies")
  seasons          Season[]        @relation("HeroSeasons")
  skill            HeroSkill       @relation("HeroToSkill", fields: [skillId], references: [id])
  createdAt        DateTime        @default(now())
  updatedAt        DateTime        @updatedAt
}

model HeroSkill {
  id          Int            @id @default(autoincrement())
  name        String
  description String
  imageUrl    String
  scaling     SkillScaling[] @relation()
  hero        Hero?          @relation("HeroToSkill")
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt
}

model Commander {
  id               Int              @id @default(autoincrement())
  commanderNumber  Int
  name             String
  title            String
  type             CommanderType
  chessPointPrice  Int
  diamondPrice     Int
  portraitImageUrl String?
  iconImageUrl     String?
  skills           CommanderSkill[] @relation("CommanderToSkill")
  skins            CommanderSkin[]  @relation("CommanderToSkin")
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model CommanderSkill {
  id          Int                @id @default(autoincrement())
  commanderId Int                
  name        String
  type        commanderSkillType
  level       Int
  description String
  imageUrl    String
  commander   Commander          @relation("CommanderToSkill", fields: [commanderId], references: [id])
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

model CommanderSkin {
  id          Int       @id @default(autoincrement())
  commanderId Int       @unique
  name        String
  imageUrl    String
  commander   Commander @relation("CommanderToSkin", fields: [commanderId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Item {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  type        ItemType
  summary     String
  modifiers   String[]
  description String
  imageUrl    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}
